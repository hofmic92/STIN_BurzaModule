name: Build, Test and Deploy to Azure

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore dependencies
        run: dotnet restore STIN_BurzaModule/STIN_BurzaModule.sln

      - name: Build solution
        run: dotnet build STIN_BurzaModule/STIN_BurzaModule.sln --configuration Release --no-restore

      - name: Install coverage tools
        run: |
          dotnet add STIN_BurzaModule.Tests/STIN_BurzaModule.Tests.csproj package coverlet.collector
          dotnet tool install --global dotnet-reportgenerator-globaltool

      - name: Clean previous test results
        run: |
          rm -rf ./TestResults
          mkdir -p ./TestResults

      - name: Run tests with coverage
        run: |
          dotnet test STIN_BurzaModule.Tests/STIN_BurzaModule.Tests.csproj \
            --no-build \
            --no-restore \
            --settings coverlet.runsettings \
            --collect:"XPlat Code Coverage" \
            --results-directory ./TestResults \
            --logger "console;verbosity=normal"

      - name: Verify coverage file
        run: |
          echo "Generated coverage files:"
          find ./TestResults -name "coverage.cobertura.xml" -exec ls -la {} \;
          if [ ! -f "$(find ./TestResults -name coverage.cobertura.xml | head -1)" ]; then
            echo "::error::Coverage file not found!"
            exit 1
          fi

      - name: Generate HTML report
        run: |
          # Explicitně najdeme coverage soubor
          COVERAGE_FILE=$(find ./TestResults -name "coverage.cobertura.xml" | head -1)
          echo "Using coverage file: $COVERAGE_FILE"
    
          # Vytvoříme plný HTML report
          reportgenerator \
            "-reports:$COVERAGE_FILE" \
            "-targetdir:coveragereport" \
            "-reporttypes:Html;Badges" \
            "-sourcedirs:./STIN_BurzaModule" \
            "-historydir:./coveragereport/history"

          # Ověříme obsah složky
          echo "Generated files in coveragereport:"
          ls -laR ./coveragereport

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: |
            coveragereport/index.html
            coveragereport/**/*.html
            coveragereport/**/*.css
            coveragereport/**/*.js
            coveragereport/**/*.svg
          if-no-files-found: error
          retention-days: 3

      - name: Publish web project
        run: dotnet publish STIN_BurzaModule/STIN_BurzaModule.csproj --configuration Release --output ./publish

      - name: Deploy to Azure Web App
        if: github.ref == 'refs/heads/main'
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'STINBurzaModule20250514183057'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ./publish
